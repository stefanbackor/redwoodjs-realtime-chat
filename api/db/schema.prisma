// Don't forget to tell Prisma about your edits to this file using
// `yarn rw prisma migrate dev` or `yarn rw prisma db push`.
// `migrate` is like committing while `push` is for prototyping.
// Read more about both here:
// https://www.prisma.io/docs/orm/prisma-migrate

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = "native"
}

// Define your own datamodels here and run `yarn redwood prisma migrate dev`
// to create migrations for them and apply to your dev DB.

model User {
  id      Int       @id @default(autoincrement())
  email   String    @unique
  name    String?
  role    Role      @default(USER)
  profile Profile?
  Message Message[]
}

model Profile {
  id     Int     @id @default(autoincrement())
  bio    String?
  avatar String?
  user   User    @relation(fields: [userId], references: [id])
  userId Int     @unique
}

enum Role {
  USER
  ADMIN
}

// Chat

model Room {
  id      Int       @id @default(autoincrement())
  name    String?
  Message Message[]
}

model Message {
  id        Int      @id @default(autoincrement())
  content   String
  room      Room     @relation(fields: [roomId], references: [id])
  roomId    Int
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  createdAt DateTime @default(now())
}
